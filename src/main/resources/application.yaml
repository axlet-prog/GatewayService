server:
  port: 8080

values:
  auth_endpoint: /auth/verify

spring:
  application:
    name: ApiGateway
  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: ${AUTH_URL:http://auth-service:8080}
          predicates:
            - Path=/auth/**
        - id: menu-service
          uri: ${RESTAURANT_URL:http://restaurant-service:8080}
          predicates:
            - Path=/menu/**
          filters:
            - name: JwtFilter
              args:
                authorizedEndpoints:
                  - pathPattern: /menu/client
                    methodType: get
                roles:
                  - "client"
            - name: JwtFilter
              args:
                authorizedEndpoints:
                  - pathPattern: /menu/admin
                    methodType: get
                  - pathPattern: /menu
                    methodType: post
                  - pathPattern: /menu/[0-9]+
                    methodType: delete
                  - pathPattern: /menu/[0-9]+
                    methodType: patch
                roles:
                  - "admin"

        - id: order-service
          uri: ${ORDER_URL:http://order-service:8080}
          predicates:
            - Path=/orders/**, /cart/**
          filters:
            - name: JwtFilter
              args:
                authorizedEndpoints:
                  - pathPattern: /cart
                    methodType: get
                  - pathPattern: /cart/add_item
                    methodType: post
                  - pathPattern: /cart/remove_item
                    methodType: delete
                  - pathPattern: /cart/create_order
                    methodType: post
                roles:
                  - "client"
            - name: JwtFilter
              args:
                authorizedEndpoints:
                  - pathPattern: /orders
                    methodType: get
                  - pathPattern: /orders/[0-9]+
                    methodType: get
                roles:
                  - "client"
                  - "courier"
                  - "admin"
            - name: JwtFilter
              args:
                authorizedEndpoints:
                  - pathPattern: /orders/assign
                    methodType: get
                roles:
                  - "admin"
            - name: JwtFilter
              args:
                authorizedEndpoints:
                  - pathPattern: /orders/set_status
                    methodType: post
                roles:
                  - "admin"
                  - "courier"